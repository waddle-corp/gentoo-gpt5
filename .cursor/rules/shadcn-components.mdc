---
alwaysApply: true
description: "컴포넌트 구성 규칙"
---
# shadcn/ui 컴포넌트 구성 규칙

바퀴 재발명을 피하기 위해 기본적으로 shadcn/ui 컴포넌트를 우선 사용한다. 재사용 가능한 UI는 `src/components/ui`에 추가하고, 페이지/특정 뷰 파일에 임베드된 ad‑hoc UI는 지양한다.

## 사용 우선순위
- 카드/레이아웃: [`card.tsx`](mdc:src/components/ui/card.tsx)
- 툴팁: [`tooltip.tsx`](mdc:src/components/ui/tooltip.tsx)
- 폼: [`input.tsx`](mdc:src/components/ui/input.tsx), [`label.tsx`](mdc:src/components/ui/label.tsx)
- 유틸: [`utils.ts`](mdc:src/lib/utils.ts) 의 `cn`
- 차트 유틸: [`chart.tsx`](mdc:src/components/ui/chart.tsx)

## 공통 컴포지션 패턴
- 카드 레이아웃은 항상 `Card > CardHeader > (CardTitle, CardDescription) > CardContent` 순서를 기본으로 한다. 예:

```tsx
<Card>
  <CardHeader>
    <CardTitle>제목</CardTitle>
    <CardDescription>보조 설명</CardDescription>
  </CardHeader>
  <CardContent>...</CardContent>
  {/* 필요 시 <CardFooter/> */}
</Card>
```

## 차트(Shadcn + Recharts) 규칙
- 모든 Recharts 차트는 다음을 기본 적용한다.
  - `ResponsiveContainer`로 래핑
  - `ChartContainer`로 감싸고 `config`로 시리즈별 색/레이블을 선언해 CSS 변수(`--chart-*`)를 주입한다. 소스: [`chart.tsx`](mdc:src/components/ui/chart.tsx)
  - 호버 시 배경 커서 오버레이는 기본 비활성화: `ChartTooltip cursor={false}`
  - 축 가이드라인: `XAxis tickLine={false} axisLine={false}`, `YAxis tickLine={false} axisLine={false} allowDecimals={false}`
  - 격자: `CartesianGrid strokeDasharray="3 3"`, 필요 시 `vertical={false}`

- 색상은 가능한 한 `ChartContainer`의 `config`를 통해 지정한다.

```tsx
<ChartContainer config={{ users: { label: "사용자 수", color: "#22d3ee" } }}>
  ...
  <Bar dataKey="users" fill="var(--chart-users)" />
</ChartContainer>
```

- Area 차트는 gradient를 `defs > linearGradient`로 정의하고, 색은 `var(--chart-*)`를 사용한다.

## 스타일/테마 일관성
- 전역 색/폰트 변수는 [`globals.css`](mdc:src/app/globals.css)를 따른다. 필요 시 CSS 변수만 추가하고 하드코딩 색상은 최소화한다.
- 클래스 결합은 `cn` 유틸을 사용한다.

## 파일 배치 규칙
- 재사용 UI는 `src/components/ui`에 배치한다. 페이지 한정 로직/레이아웃만 페이지 파일에 둔다.
- 새 UI가 필요하면 기존 파일에 합치지 말고 별도 컴포넌트로 추가 후 export.

## 접근성/사용성
- 상호작용 컴포넌트(Select 등)는 `aria-label`/`aria-*`를 제공한다.
- 툴팁은 핵심 값만, 숫자 포맷은 간결하게.

## 코드 예시 빠른 템플릿

```tsx
// Card + BarChart 템플릿
<Card>
  <CardHeader>
    <CardTitle>Engagement Score 분포</CardTitle>
    <CardDescription>X축: score, Y축: users</CardDescription>
  </CardHeader>
  <CardContent>
    <ChartContainer config={{ users: { label: "사용자 수", color: "#22d3ee" } }} className="h-[420px] w-full">
      <ResponsiveContainer width="100%" height="100%">
        <BarChart data={data}>
          <CartesianGrid strokeDasharray="3 3" />
          <XAxis dataKey="score" tickLine={false} axisLine={false} />
          <YAxis allowDecimals={false} tickLine={false} axisLine={false} />
          <ChartTooltip cursor={false} content={ChartTooltipContent} />
          <Bar dataKey="users" fill="var(--chart-users)" radius={[4,4,0,0]} />
        </BarChart>
      </ResponsiveContainer>
    </ChartContainer>
  </CardContent>
</Card>
```

